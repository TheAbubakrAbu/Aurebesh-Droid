# .github/workflows/build.yml

name: Build Aurebesh Droid Linux Binary

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CMAKE_BUILD_TYPE: Release
  CCACHE_MAXSIZE: 200M
  BUILD_DIR: build

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install build tools
        run: |
          sudo apt-get -qq update
          sudo apt-get -y -qq install \
            build-essential cmake ninja-build ccache libssl-dev pkg-config
          ccache --max-size=$CCACHE_MAXSIZE
          ccache -z

      - uses: actions/cache@v3
        with:
          path: |
            ~/.ccache
            ${{ env.BUILD_DIR }}
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/*.cpp', '**/*.hpp', '**/CMakeLists.txt', '**/*.cmake', 'extern/DPP/**') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Configure & build
        run: |
          cmake -S . -B $BUILD_DIR -G Ninja \
                -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build $BUILD_DIR --target AurebeshDroid --parallel $(nproc)

      - name: Verify binary
        run: |
          ls -lh $BUILD_DIR/AurebeshDroid
          file $BUILD_DIR/AurebeshDroid
          test -x $BUILD_DIR/AurebeshDroid

      - name: Rename binary
        run: |
          mv $BUILD_DIR/AurebeshDroid $BUILD_DIR/LinuxBinary

      - name: Show ccache stats
        if: always()
        run: ccache -s

      - uses: actions/upload-artifact@v4
        with:
          name: LinuxBinary
          path: ${{ env.BUILD_DIR }}/LinuxBinary